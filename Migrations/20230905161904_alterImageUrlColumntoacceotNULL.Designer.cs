// <auto-generated />
using BulkyWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bulky.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230905161904_alterImageUrlColumntoacceotNULL")]
    partial class alterImageUrlColumntoacceotNULL
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bulky.Models.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Price1")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Gucci",
                            CategoryId = 1,
                            ImageUrl = " ",
                            ListPrice = 50.0,
                            Name = "Pants",
                            Price1 = 85.0,
                            Price100 = 2355.0,
                            Price50 = 750.0
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Gucci",
                            CategoryId = 2,
                            ImageUrl = " ",
                            ListPrice = 55.0,
                            Name = "Shirts",
                            Price1 = 90.0,
                            Price100 = 2500.0,
                            Price50 = 800.0
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Gucci",
                            CategoryId = 1,
                            ImageUrl = " ",
                            ListPrice = 45.0,
                            Name = "T-Shirts",
                            Price1 = 75.0,
                            Price100 = 2300.0,
                            Price50 = 750.0
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Gucci",
                            CategoryId = 2,
                            ImageUrl = " ",
                            ListPrice = 30.0,
                            Name = "Shorts",
                            Price1 = 65.0,
                            Price100 = 2245.0,
                            Price50 = 600.0
                        });
                });

            modelBuilder.Entity("BulkyWeb.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Men"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Women"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Children"
                        });
                });

            modelBuilder.Entity("Bulky.Models.Models.Product", b =>
                {
                    b.HasOne("BulkyWeb.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
